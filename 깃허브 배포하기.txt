
1. 경로 이동
\ => /
cd E:/KHR/06월/06_24_03_포토폴리오_프로젝트_POFO_반응형_배포

2. 깃 설정
git init

3. 인터넷 웹 브라우저에서 깃 허브 접속 로그인하기

4. 포토폴리오 프로젝트 저장소 (리파지토이 Repository) 만들기

5. 원격 저장소 리파지토리 주소 복사하기
https://github.com/HYO0984/pofo.git

6.깃배쉬에서 환경설정(config) 사용자(user) 아이디 입력하기

git config user.name'아이디(hoo0049)'

7.깃배쉬에서 환경설정(config) 사용자 이메일 입력하기

git config user.email'이메일(hoo0049@naver.com)'

8. 원격 접속
git remote add origin 주소(https://github.com/HYO0984/pofo.git)
  - 접속 확인
  git remote -v

9. 스테이징하기 = 웹 파일 모두 추가하기
git add .

10. 커밋하기 =  올릴 파일에 대한 설명도 추가하기
git commit -m '반응형 포토폴리오'

11. 푸쉬하기
git push origin master

12. 깃허브 홈페이지 -> 새로고침 -> 화면 목록 보임

13. 배포 -> 웹 페이지 배포하기 -> 리파지토리 상단 우측 메뉴 -> Settings 클릭

14. 좌측에 중단 하단 메뉴 중 Pages 클릭

15. GitHub Pages 열림 ,  중간 바로 아래를 보면 Source 가 보인다 

16. Source 의 선택 상자- > none 을 master 로 바꿔줌

17. save 클릭해서 저장

18. 웹 주소가 나타남

19. 1 ~ 2 분 후에 배포 주소를 클릭하면 웹 페이지 열림

https://hyo0984.github.io/pofo/

///////////////////////////////////////////////////////////////////////
2차 수정할 때
2치 회사에서 작업하기 -깃허브에서 내려받고 수정하기 그리고 푸쉬하기

clone
클론(복제) - 압축파일 내려 받는거랑 같은 원리임

git clone 복제할 주소 ex(https://github.com/HYO0984/Kurly_CRA.git)
cd Kurly_CRA //폴더 안에 들어가기
npm i

수정 후


git config user.name'아이디(hoo0049)'

git config user.email'이메일(hoo0049@naver.com)'

git add .

git commit -m '.....내용'

git push origin master

수정내용 푸쉬 확인 - 새로고침

> 깃허브 배포하기
git init

git config user.name'아이디(hoo0049)'

git config user.email'이메일(hoo0049@naver.com)'

git remote add origin https://github.com/HYO0984/Kurly.git
git remote -v

git add .
git commit -m '리액트 CRA 마켓컬리 회원가입폼 배포'
git push origin master

새로고침

//////////////////////////////////////////////////////////////////////

<배포하기>

1. 빌드하기
npm run build

배포 참조 사이트
https://cra.link/deployment

GitHub Pages
Step 1: Add homepage to package.json
"homepage": "https://myusername.github.io/my-app",
이름 변경=> 
"homepage": "https://hoo0049.github.io/kurly"

package.json 붙여넣기 위치
  },
"homepage": "https://hoo0049.github.io/kurly"
}
맨 아래

Step 2: Install gh-pages and add deploy to scripts in package.json
깃허브 웹배포 도와줄 패키지 설치
2-1.
npm install --save gh-pages  예전에는 "dependencies"
또는
npm install -g yarn - 안되면
yarn add gh-pages

2-2.
Add the following scripts in your package.json:
  "scripts": {
    "predeploy": "npm run build",   
    "deploy": "gh-pages -b master -d build",

    "start": "react-scripts start",
    "build": "react-scripts build",
  }

  
Step 3: Deploy the site by running npm run deploy
npm run deploy

Published

깃허브 확인하기


Step 4: For a project page, ensure your project’s settings use gh-pages
Finally, make sure GitHub Pages option in your GitHub project settings is set to use the gh-pages branch:

Setting 우측 상단 메뉴 클릭 
Pages => 좌측 중간 메뉴 클릭

GitHub Pages => 중간에 Branch

Branch => 선택목록 => master 선택

None => 클릭
master => 선택
save => 클릭 되면서 저장 주소가 나타난다.

새로고침
https://hyo0984.github.io/Kurly/